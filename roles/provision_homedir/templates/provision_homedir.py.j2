#!/usr/bin/python
import ldap
import traceback
import os
import stat

class ldapSearchConfig:
    def __init__(self):
        self.ldapserver=""
        self.binddn=""
        self.bindpw=""
        self.baseDN=""
        self.searchFilter=""
        self.cacertfile=''

class genericUser:
    def __init__(self):
        self.dn=""
        self.cn=""
        self.entry=""
	self.uid=""


def get_users(server):
#    ldap.set_option(ldap.OPT_X_TLS_CACERTFILE,server.cacertfile)
    ldap.set_option( ldap.OPT_X_TLS_REQUIRE_CERT, ldap.OPT_X_TLS_NEVER )
    l=ldap.initialize(server.ldapserver)
    l.simple_bind_s(server.binddn,server.bindpw)
    retrieveAttributes = ["*"]
    searchScope=ldap.SCOPE_SUBTREE
    try:
        ldap_result_id = l.search(server.baseDN,searchScope,server.searchFilter,retrieveAttributes)
    except ldap.LDAPError, e:
        pass
    rtype,rdata = l.result(ldap_result_id,1)
    allusers={}
    for user in rdata:
        dn=user[0]
        attrs=user[1]
        allusers[dn]=genericUser()
        allusers[dn].dn=dn
        allusers[dn].entry=attrs
    return allusers


def mk_homedir(path,uidNumber,gidNumber):
	try:
		statinfo = os.stat(path)
	except OSError as e:
		if 'No such file or directory' in e:
			os.mkdir(path,0700)
	statinfo = os.stat(path)
	if stat.S_ISDIR(statinfo.st_mode):
		if statinfo.st_gid != gidNumber or statinfo.st_uid!=uidNumber:
			os.chown(path,uidNumber,gidNumber)
	else:
		raise Exception("users homedirectory is not a directory %s"%path)

s=ldapSearchConfig()
s.ldapserver="{{ ldapURI }}"
s.binddn="{{ ldapBindDN }}"
s.bindpw="{{ ldapBindDNPassword }}"
s.baseDN="{{ ldapBase }}"
s.searchFilter = "{{ search_filter }}"
homeDirEntry= "{{ homeDirEntry }}"

users=get_users(s)
for user in users:
	try:
		mk_homedir(users[user].entry[homeDirEntry][0],int(users[user].entry['uidNumber'][0]),int(users[user].entry['gidNumber'][0]))
	except:
		print traceback.format_exc()
		pass
